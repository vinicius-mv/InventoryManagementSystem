@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var inv in listInventories)
        {
            <tr>
                <td>@inv.InventoryName</td>
                <td>@inv.Quantity</td>
                <td>@inv.Price.ToString("C")</td>
                <td>
                    <button 
                        type="button" 
                        class="btn btn-light">Edit
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Inventory> listInventories = new List<Inventory>();

    [Parameter]
    public string SearchTerm { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        base.OnParametersSet();

        listInventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(SearchTerm)).ToList();
    }
}
